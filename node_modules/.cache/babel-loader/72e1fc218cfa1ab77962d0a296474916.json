{"ast":null,"code":"var _jsxFileName = \"/Users/s_likhith/Desktop/CV/Portfolio/my-portfolio/src/components/js/projects.js\";\nimport React from 'react';\nimport '../css/projects.css';\nimport plasmaImage from '../images/blood.avif';\nimport chatbotImage from '../images/chatbot.jpeg';\nimport clusterImage from '../images/bigdata.jpg';\nimport bankImage from '../images/bank.webp';\nimport blockchainImage from '../images/bchain.webp';\nconst projects = [{\n  title: 'Byzantine Fault-Tolerant Transactions',\n  description: 'Designed a fault-tolerant, sharded database with replication, leader-based management, and Google Spanner-like architecture. Enabled atomic cross-shard transactions using WAL and 2PL, achieving 500ms latency with PBFT consensus.',\n  image: bankImage,\n  link: 'https://github.com/srinivaslikhith/2PC-PBFT',\n  tags: ['Distributed System', 'C++', 'gRPC', 'MongoDB', 'PBFT']\n}, {\n  title: 'APAXOS: Blockchain-Inspired Bank',\n  description: 'Developed a block-based consensus protocol for handling insufficient balances, achieving 300ms latency with 100+ concurrent transactions. Ensured consistency and fault tolerance using catch-up mechanisms and MongoDB transaction logging.',\n  image: blockchainImage,\n  link: 'https://github.com/srinivaslikhith/ModifiedPaxosBanking',\n  tags: ['Consensus', 'C++', 'gRPC', 'MongoDB', 'Paxos', 'Block-Chain']\n}, {\n  title: 'Plasma Donor App',\n  description: \"Developed a plasma donor web app, cutting deployment time by 70% with Docker and a Jenkins CI/CD pipeline. Utilized AWS Lambda, API Gateway, and DynamoDB for scalable data handling, with Amazon SNS for real-time notifications.\",\n  image: plasmaImage,\n  link: 'https://github.com/srinivaslikhith/dynamite',\n  tags: ['Containerization', 'Jenkins', 'AWS', 'CI/CD']\n}, {\n  title: 'Deep Learning Chatbot',\n  description: 'Research article on chatbot functionality, highlighting neural network training with intent data. Developed a Python prototype to demonstrate these concepts.',\n  image: chatbotImage,\n  link: 'https://www.warse.org/IJATCSE/static/pdf/file/ijatcse741032021.pdf',\n  tags: ['Python', 'Neural Networks', 'NLP']\n}, {\n  title: 'Optimized IVF Clustering',\n  description: 'Implemented and benchmarked clustering algorithms to optimize Inverted File Indexing for high-dimensional vector embeddings, focusing on efficiency, information loss, and balance.',\n  image: clusterImage,\n  link: '',\n  tags: ['Clustering', 'Vector Embeddings', 'Optimization']\n}];\nfunction Projects() {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: \"projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"<Projects />\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, projects.map((project, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-card\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: project.image,\n    alt: project.title,\n    className: \"project-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, project.link && /*#__PURE__*/React.createElement(\"a\", {\n    href: project.link,\n    className: \"view-project-btn\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"View Project\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"project-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, project.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"project-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, project.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, project.tags.map((tag, idx) => /*#__PURE__*/React.createElement(\"span\", {\n    key: idx,\n    className: \"project-tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, tag)))))))));\n}\nexport default Projects;","map":{"version":3,"names":["React","plasmaImage","chatbotImage","clusterImage","bankImage","blockchainImage","projects","title","description","image","link","tags","Projects","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","map","project","index","key","src","alt","href","target","rel","tag","idx"],"sources":["/Users/s_likhith/Desktop/CV/Portfolio/my-portfolio/src/components/js/projects.js"],"sourcesContent":["import React from 'react';\nimport '../css/projects.css';\nimport plasmaImage from '../images/blood.avif';\nimport chatbotImage from '../images/chatbot.jpeg';\nimport clusterImage from '../images/bigdata.jpg';\nimport bankImage from '../images/bank.webp';\nimport blockchainImage from '../images/bchain.webp';\n\nconst projects = [\n  {\n    title: 'Byzantine Fault-Tolerant Transactions',\n    description: 'Designed a fault-tolerant, sharded database with replication, leader-based management, and Google Spanner-like architecture. Enabled atomic cross-shard transactions using WAL and 2PL, achieving 500ms latency with PBFT consensus.',\n    image: bankImage,\n    link: 'https://github.com/srinivaslikhith/2PC-PBFT',\n    tags: ['Distributed System', 'C++', 'gRPC', 'MongoDB', 'PBFT']\n  },\n  {\n    title: 'APAXOS: Blockchain-Inspired Bank',\n    description: 'Developed a block-based consensus protocol for handling insufficient balances, achieving 300ms latency with 100+ concurrent transactions. Ensured consistency and fault tolerance using catch-up mechanisms and MongoDB transaction logging.',\n    image: blockchainImage,\n    link: 'https://github.com/srinivaslikhith/ModifiedPaxosBanking',\n    tags: ['Consensus', 'C++', 'gRPC', 'MongoDB', 'Paxos', 'Block-Chain']\n  },\n  \n  {\n    title: 'Plasma Donor App',\n    description: \"Developed a plasma donor web app, cutting deployment time by 70% with Docker and a Jenkins CI/CD pipeline. Utilized AWS Lambda, API Gateway, and DynamoDB for scalable data handling, with Amazon SNS for real-time notifications.\",\n    image: plasmaImage,\n    link: 'https://github.com/srinivaslikhith/dynamite',\n    tags: ['Containerization', 'Jenkins', 'AWS', 'CI/CD']\n  },\n  {\n    title: 'Deep Learning Chatbot',\n    description: 'Research article on chatbot functionality, highlighting neural network training with intent data. Developed a Python prototype to demonstrate these concepts.',\n    image: chatbotImage,\n    link: 'https://www.warse.org/IJATCSE/static/pdf/file/ijatcse741032021.pdf',\n    tags: ['Python', 'Neural Networks', 'NLP']\n  },\n  {\n    title: 'Optimized IVF Clustering',\n    description: 'Implemented and benchmarked clustering algorithms to optimize Inverted File Indexing for high-dimensional vector embeddings, focusing on efficiency, information loss, and balance.',\n    image: clusterImage,\n    link: '',\n    tags: ['Clustering', 'Vector Embeddings', 'Optimization']\n  }\n];\n\nfunction Projects() {\n  return (\n    <section id=\"projects\">\n      <div className=\"projects-container\">\n        <h2 className=\"section-title\">{\"<Projects />\"}</h2>\n        <div className=\"projects-grid\">\n          {projects.map((project, index) => (\n            <div className=\"project-card\" key={index}>\n              <div className=\"project-image-container\">\n                <img src={project.image} alt={project.title} className=\"project-image\" />\n                <div className=\"project-overlay\">\n                  {project.link && (\n                    <a \n                      href={project.link} \n                      className=\"view-project-btn\"\n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                    >\n                      View Project\n                    </a>\n                  )}\n                </div>\n              </div>\n              <div className=\"project-content\">\n                <h3 className=\"project-title\">{project.title}</h3>\n                <p className=\"project-description\">{project.description}</p>\n                <div className=\"project-tags\">\n                  {project.tags.map((tag, idx) => (\n                    <span key={idx} className=\"project-tag\">{tag}</span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}