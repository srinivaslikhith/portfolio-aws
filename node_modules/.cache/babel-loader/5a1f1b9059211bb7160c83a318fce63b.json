{"ast":null,"code":"import { useSyncExternalStore, useEvent } from \"./react-deps.js\";\nimport { absolutePath, relativePath } from \"./paths.js\";\n\n/**\n * History API docs @see https://developer.mozilla.org/en-US/docs/Web/API/History\n */\nconst eventPopstate = \"popstate\";\nconst eventPushState = \"pushState\";\nconst eventReplaceState = \"replaceState\";\nconst eventHashchange = \"hashchange\";\nexport const events = [eventPopstate, eventPushState, eventReplaceState, eventHashchange];\nconst subscribeToLocationUpdates = callback => {\n  for (const event of events) {\n    addEventListener(event, callback);\n  }\n  return () => {\n    for (const event of events) {\n      removeEventListener(event, callback);\n    }\n  };\n};\nexport const useLocationProperty = (fn, ssrFn) => useSyncExternalStore(subscribeToLocationUpdates, fn, ssrFn);\nconst currentSearch = () => location.search;\nexport const useSearch = () => useLocationProperty(currentSearch);\nconst currentPathname = () => location.pathname;\nexport const usePathname = function () {\n  let {\n    ssrPath\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useLocationProperty(currentPathname, ssrPath ? () => ssrPath : currentPathname);\n};\nexport const navigate = function (to) {\n  let {\n    replace = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return history[replace ? eventReplaceState : eventPushState](null, \"\", to);\n};\n\n// the 2nd argument of the `useLocation` return value is a function\n// that allows to perform a navigation.\n//\n// the function reference should stay the same between re-renders, so that\n// it can be passed down as an element prop without any performance concerns.\n// (This is achieved via `useEvent`.)\nconst useLocation = function () {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [relativePath(opts.base, usePathname(opts)), useEvent((to, navOpts) => navigate(absolutePath(to, opts.base), navOpts))];\n};\nexport default useLocation;\n\n// While History API does have `popstate` event, the only\n// proper way to listen to changes via `push/replaceState`\n// is to monkey-patch these methods.\n//\n// See https://stackoverflow.com/a/4585031\nif (typeof history !== \"undefined\") {\n  for (const type of [eventPushState, eventReplaceState]) {\n    const original = history[type];\n    // TODO: we should be using unstable_batchedUpdates to avoid multiple re-renders,\n    // however that will require an additional peer dependency on react-dom.\n    // See: https://github.com/reactwg/react-18/discussions/86#discussioncomment-1567149\n    history[type] = function () {\n      const result = original.apply(this, arguments);\n      const event = new Event(type);\n      event.arguments = arguments;\n      dispatchEvent(event);\n      return result;\n    };\n  }\n}","map":{"version":3,"names":["useSyncExternalStore","useEvent","absolutePath","relativePath","eventPopstate","eventPushState","eventReplaceState","eventHashchange","events","subscribeToLocationUpdates","callback","event","addEventListener","removeEventListener","useLocationProperty","fn","ssrFn","currentSearch","location","search","useSearch","currentPathname","pathname","usePathname","ssrPath","arguments","length","undefined","navigate","to","replace","history","useLocation","opts","base","navOpts","type","original","result","apply","Event","dispatchEvent"],"sources":["/Users/s_likhith/Desktop/CV/Portfolio/my-portfolio/node_modules/wouter/use-location.js"],"sourcesContent":["import { useSyncExternalStore, useEvent } from \"./react-deps.js\";\nimport { absolutePath, relativePath } from \"./paths.js\";\n\n/**\n * History API docs @see https://developer.mozilla.org/en-US/docs/Web/API/History\n */\nconst eventPopstate = \"popstate\";\nconst eventPushState = \"pushState\";\nconst eventReplaceState = \"replaceState\";\nconst eventHashchange = \"hashchange\";\nexport const events = [\n  eventPopstate,\n  eventPushState,\n  eventReplaceState,\n  eventHashchange,\n];\n\nconst subscribeToLocationUpdates = (callback) => {\n  for (const event of events) {\n    addEventListener(event, callback);\n  }\n  return () => {\n    for (const event of events) {\n      removeEventListener(event, callback);\n    }\n  };\n};\n\nexport const useLocationProperty = (fn, ssrFn) =>\n  useSyncExternalStore(subscribeToLocationUpdates, fn, ssrFn);\n\nconst currentSearch = () => location.search;\nexport const useSearch = () => useLocationProperty(currentSearch);\n\nconst currentPathname = () => location.pathname;\n\nexport const usePathname = ({ ssrPath } = {}) =>\n  useLocationProperty(\n    currentPathname,\n    ssrPath ? () => ssrPath : currentPathname\n  );\n\nexport const navigate = (to, { replace = false } = {}) =>\n  history[replace ? eventReplaceState : eventPushState](null, \"\", to);\n\n// the 2nd argument of the `useLocation` return value is a function\n// that allows to perform a navigation.\n//\n// the function reference should stay the same between re-renders, so that\n// it can be passed down as an element prop without any performance concerns.\n// (This is achieved via `useEvent`.)\nconst useLocation = (opts = {}) => [\n  relativePath(opts.base, usePathname(opts)),\n  useEvent((to, navOpts) => navigate(absolutePath(to, opts.base), navOpts)),\n];\n\nexport default useLocation;\n\n// While History API does have `popstate` event, the only\n// proper way to listen to changes via `push/replaceState`\n// is to monkey-patch these methods.\n//\n// See https://stackoverflow.com/a/4585031\nif (typeof history !== \"undefined\") {\n  for (const type of [eventPushState, eventReplaceState]) {\n    const original = history[type];\n    // TODO: we should be using unstable_batchedUpdates to avoid multiple re-renders,\n    // however that will require an additional peer dependency on react-dom.\n    // See: https://github.com/reactwg/react-18/discussions/86#discussioncomment-1567149\n    history[type] = function () {\n      const result = original.apply(this, arguments);\n      const event = new Event(type);\n      event.arguments = arguments;\n\n      dispatchEvent(event);\n      return result;\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}