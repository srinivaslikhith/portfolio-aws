{"ast":null,"code":"var _jsxFileName = \"/Users/s_likhith/Desktop/CV/Portfolio/my-portfolio/src/components/js/Intro.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport '../css/Intro.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimelineItem({\n  title,\n  period,\n  details,\n  isActive,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `timeline-item ${isActive ? 'active' : 'inactive'}`,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"period\",\n          children: period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), isActive && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"timeline-details\",\n      children: Array.isArray(details) && details.map((detail, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: detail\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = TimelineItem;\nfunction Intro() {\n  _s();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const containerRef = useRef(null);\n  const items = [\n  // Experience\n  {\n    title: 'Graduate Researcher - Stony Brook University',\n    period: 'Jan 2023 – Present',\n    details: ['Collected and anonymized clinical datasets from Stony Brook Hospital for large-scale analysis.', 'Designed a PostgreSQL-backed system to store and query fetal heart rate (FHR) signals and clinical data.', 'Built an LLM-powered query interface with FastAPI and GPT, enabling natural language to SQL conversion for clinicians.']\n  }, {\n    title: 'Software Engineer - LocoNav',\n    period: 'Jan 2022 – Aug 2023',\n    details: ['Built scalable backend services handling real-time telemetry and video feeds from 50,000+ IoT dashcams.', 'Implemented a distributed task orchestration engine with retries, scheduling, and fault recovery mechanisms.', 'Developed a versioned configuration management system with an intuitive frontend for group-based device settings.', 'Created a live video monitoring dashboard with sub-4s latency streaming supporting multiple concurrent sessions.', 'Built secure REST APIs for vehicle tracking and on-demand video delivery with real-time metadata overlays.', 'Automated CI/CD workflows with containerized deployments and enforced 85%+ test coverage for code reliability.', 'Integrated monitoring and observability with Elastic APM, Datadog, Prometheus, and Grafana.']\n  },\n  // Education\n  {\n    title: 'Stony Brook University',\n    period: 'Aug. 2023 – May 2025',\n    details: ['Masters in Computer Science', 'Coursework: Distributed Systems, Database Systems, Advanced Algorithms, Visualization']\n  }, {\n    title: 'Vellore Institute of Technology',\n    period: 'July 2018 – May 2022',\n    details: [\"Bachelor’s in Computer Science\", 'Coursework: Operating Systems, Data Structures, Object-Oriented Programming, Java, Computer Networks, AI']\n  }];\n\n  // Track scroll position → update activeIndex\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n    const elements = container.querySelectorAll('.timeline-item');\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && entry.intersectionRatio > 0.6) {\n          const idx = Array.from(elements).indexOf(entry.target);\n          setActiveIndex(idx);\n        }\n      });\n    }, {\n      root: container,\n      threshold: [0.6]\n    });\n    elements.forEach(el => observer.observe(el));\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"intro\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"intro-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: '<Experience & Education />'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-box\",\n        ref: containerRef,\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(TimelineItem, {\n          ...item,\n          isActive: index === activeIndex,\n          onClick: () => setActiveIndex(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Intro, \"9pl5mvpXiFRkjp1ifU8aQwa84qc=\");\n_c2 = Intro;\nexport default Intro;\nvar _c, _c2;\n$RefreshReg$(_c, \"TimelineItem\");\n$RefreshReg$(_c2, \"Intro\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","TimelineItem","title","period","details","isActive","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","detail","index","_c","Intro","_s","activeIndex","setActiveIndex","containerRef","items","container","current","elements","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","intersectionRatio","idx","from","indexOf","target","root","threshold","el","observe","disconnect","id","ref","item","_c2","$RefreshReg$"],"sources":["/Users/s_likhith/Desktop/CV/Portfolio/my-portfolio/src/components/js/Intro.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport '../css/Intro.css';\n\nfunction TimelineItem({ title, period, details, isActive, onClick }) {\n  return (\n    <div\n      className={`timeline-item ${isActive ? 'active' : 'inactive'}`}\n      onClick={onClick}\n    >\n      <div className=\"timeline-header\">\n        <div className=\"timeline-title\">\n          <h3>{title}</h3>\n          <span className=\"period\">{period}</span>\n        </div>\n      </div>\n\n      {isActive && (\n        <ul className=\"timeline-details\">\n          {Array.isArray(details) &&\n            details.map((detail, index) => <li key={index}>{detail}</li>)}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nfunction Intro() {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const containerRef = useRef(null);\n\n  const items = [\n    // Experience\n    {\n      title: 'Graduate Researcher - Stony Brook University',\n      period: 'Jan 2023 – Present',\n      details: [\n        'Collected and anonymized clinical datasets from Stony Brook Hospital for large-scale analysis.',\n        'Designed a PostgreSQL-backed system to store and query fetal heart rate (FHR) signals and clinical data.',\n        'Built an LLM-powered query interface with FastAPI and GPT, enabling natural language to SQL conversion for clinicians.',\n      ],\n    },\n    {\n      title: 'Software Engineer - LocoNav',\n      period: 'Jan 2022 – Aug 2023',\n      details: [\n        'Built scalable backend services handling real-time telemetry and video feeds from 50,000+ IoT dashcams.',\n        'Implemented a distributed task orchestration engine with retries, scheduling, and fault recovery mechanisms.',\n        'Developed a versioned configuration management system with an intuitive frontend for group-based device settings.',\n        'Created a live video monitoring dashboard with sub-4s latency streaming supporting multiple concurrent sessions.',\n        'Built secure REST APIs for vehicle tracking and on-demand video delivery with real-time metadata overlays.',\n        'Automated CI/CD workflows with containerized deployments and enforced 85%+ test coverage for code reliability.',\n        'Integrated monitoring and observability with Elastic APM, Datadog, Prometheus, and Grafana.',\n      ],\n    },\n    // Education\n    {\n      title: 'Stony Brook University',\n      period: 'Aug. 2023 – May 2025',\n      details: [\n        'Masters in Computer Science',\n        'Coursework: Distributed Systems, Database Systems, Advanced Algorithms, Visualization',\n      ],\n    },\n    {\n      title: 'Vellore Institute of Technology',\n      period: 'July 2018 – May 2022',\n      details: [\n        \"Bachelor’s in Computer Science\",\n        'Coursework: Operating Systems, Data Structures, Object-Oriented Programming, Java, Computer Networks, AI',\n      ],\n    },\n  ];\n\n  // Track scroll position → update activeIndex\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const elements = container.querySelectorAll('.timeline-item');\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting && entry.intersectionRatio > 0.6) {\n            const idx = Array.from(elements).indexOf(entry.target);\n            setActiveIndex(idx);\n          }\n        });\n      },\n      { root: container, threshold: [0.6] }\n    );\n\n    elements.forEach((el) => observer.observe(el));\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <section id=\"intro\">\n      <div className=\"intro-container\">\n        <h2 className=\"section-title\">{'<Experience & Education />'}</h2>\n        <div className=\"timeline-box\" ref={containerRef}>\n          {items.map((item, index) => (\n            <TimelineItem\n              key={index}\n              {...item}\n              isActive={index === activeIndex}\n              onClick={() => setActiveIndex(index)}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Intro;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}