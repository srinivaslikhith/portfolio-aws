{"ast":null,"code":"import React,{useState}from'react';import'../css/projects.css';// ðŸ”¹ Image imports (make sure these files exist in /images/)\nimport plasmaImage from'../images/blood.avif';import chatbotImage from'../images/chatbot.jpeg';import clusterImage from'../images/bigdata.jpg';import pbftImage from'../images/pbft.png';import adachainImage from'../images/adachain.png';import dsdbImage from'../images/dsdb.png';import taImage from'../images/TA.png';import fleetImage from'../images/fleet.png';// ðŸ”¹ Projects grouped by category\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const categories={\"Blockchain & Distributed Databases\":[{title:'ConsensusX | Self-Optimizing Blockchain Platform',description:'Implemented an adaptive blockchain system integrating BFT consensus protocols (PBFT, SBFT, HotStuff) with architectures (OX, OXII, XOV, XOV++) to handle varying workloads and Byzantine fault scenarios. Developed a reinforcement learning agent for dynamic configuration tuning, achieving ~27% higher throughput than fixed setups.',image:adachainImage,link:'',tags:['Blockchain','Distributed System','C++','Reinforcement Learning','BFT']},{title:'Linear PBFT | Low-Complexity Consensus for Blockchains',description:'Developed a permissioned blockchain protocol using Linear PBFT, drastically reducing message complexity compared to classical PBFT. Added view-change and checkpointing mechanisms to tolerate Byzantine replicas while ensuring safety and liveness under network faults.',image:pbftImage,link:'https://github.com/srinivaslikhith/linear-pbft',tags:['Blockchain','Distributed Consensus','C++','gRPC','Linear PBFT']},{title:'APaxos: Distributed Sharded Database',description:'Built a distributed sharded database using a modified Paxos algorithm with snapshots for fast state catch-up. When a node encounters insufficient balance, it attempts to become leader and initiates a consensus round, ensuring all nodes stay up-to-date while supporting intra- and cross-shard transactions with 2PL and 2PC for consistency and fault tolerance.',image:dsdbImage,link:'https://github.com/srinivaslikhith/2pc-paxos',tags:['Distributed Database','Consensus','C++','gRPC','Paxos','Sharding','2PC','2PL','Snapshots']}],\"AI & Machine Learning\":[{title:'Deep Learning Chatbot',description:'Research article on chatbot functionality, highlighting neural network training with intent data. Developed a Python prototype to demonstrate these concepts.',image:chatbotImage,link:'https://www.warse.org/IJATCSE/static/pdf/file/ijatcse741032021.pdf',tags:['Python','Neural Networks','NLP']},{title:'Optimized IVF Clustering',description:'Implemented and benchmarked clustering algorithms to optimize Inverted File Indexing for high-dimensional vector embeddings, focusing on efficiency, information loss, and balance.',image:clusterImage,link:'',tags:['Clustering','Vector Embeddings','Optimization']},{title:'AI Teaching Assistant | Fine-Tuned LLaMA Model',description:'Applied LoRA-based fine-tuning on Metaâ€™s LLaMA-3.2B with 4-bit quantization and mixed-precision training over domain-specific transcripts to build an efficient academic chatbot. Deployed via FastAPI and Streamlit with dynamic batching and KV caching to deliver fast student-facing Q&A with <2s latency.',image:taImage,link:'',tags:['AI','Chatbot','LLaMA','PyTorch','Transformers','FastAPI']}],\"Software Engineering & Microservices\":[{title:'FleetUpdater | IoT Device Management',description:'Built a backend microservice with REST APIs and a ReactJS frontend to enable secure OTA updates for IoT devices using AWS S3 presigned URLs, checksum validation, and recovery mechanisms resilient to reboots and unreliable networks. Developed a React dashboard to manage device groups and track installations across thousands of devices.',image:fleetImage,link:'',tags:['IoT','Device Management','ReactJS','AWS S3','Microservices','OTA Updates']},{title:'Plasma Donor App',description:'Developed a plasma donor web app, cutting deployment time by 70% with Docker and a Jenkins CI/CD pipeline. Utilized AWS Lambda, API Gateway, and DynamoDB for scalable data handling, with Amazon SNS for real-time notifications.',image:plasmaImage,link:'https://github.com/srinivaslikhith/dynamite',tags:['Containerization','Jenkins','AWS','CI/CD']}]};// ðŸ”¹ Project Card with expandable description\nfunction ProjectCard(_ref){let{project}=_ref;const[expanded,setExpanded]=useState(false);const toggleDescription=()=>{setExpanded(!expanded);};const shortText=project.description.length>160?project.description.slice(0,160)+'...':project.description;return/*#__PURE__*/_jsxs(\"div\",{className:\"project-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"project-image-container\",children:[project.image&&/*#__PURE__*/_jsx(\"img\",{src:project.image,alt:project.title,className:\"project-image\"}),/*#__PURE__*/_jsx(\"div\",{className:\"project-overlay\",children:project.link&&/*#__PURE__*/_jsx(\"a\",{href:project.link,className:\"view-project-btn\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"View Project\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"project-content\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"project-title\",children:project.title}),/*#__PURE__*/_jsx(\"p\",{className:\"project-description\",children:expanded?project.description:shortText}),project.description.length>160&&/*#__PURE__*/_jsx(\"button\",{className:\"see-more-btn\",onClick:toggleDescription,children:expanded?'See Less':'See More'}),/*#__PURE__*/_jsx(\"div\",{className:\"project-tags\",children:Array.isArray(project.tags)&&project.tags.map((tag,idx)=>/*#__PURE__*/_jsx(\"span\",{className:\"project-tag\",children:tag},idx))})]})]});}function Projects(_ref2){let{skillsRef}=_ref2;return/*#__PURE__*/_jsx(\"section\",{id:\"projects\",children:/*#__PURE__*/_jsx(\"div\",{className:\"projects-container\",children:categories&&Object.entries(categories).map(_ref3=>{let[category,projects]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:\"project-category\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"category-title\",children:category}),/*#__PURE__*/_jsx(\"div\",{className:\"projects-grid\",children:Array.isArray(projects)&&projects.map((project,index)=>/*#__PURE__*/_jsx(ProjectCard,{project:project},index))})]},category);})})});}export default Projects;","map":{"version":3,"names":["React","useState","plasmaImage","chatbotImage","clusterImage","pbftImage","adachainImage","dsdbImage","taImage","fleetImage","jsx","_jsx","jsxs","_jsxs","categories","title","description","image","link","tags","ProjectCard","_ref","project","expanded","setExpanded","toggleDescription","shortText","length","slice","className","children","src","alt","href","target","rel","onClick","Array","isArray","map","tag","idx","Projects","_ref2","skillsRef","id","Object","entries","_ref3","category","projects","index"],"sources":["/Users/s_likhith/Desktop/CV/Portfolio/my-portfolio/src/components/js/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/projects.css';\n\n// ðŸ”¹ Image imports (make sure these files exist in /images/)\nimport plasmaImage from '../images/blood.avif';\nimport chatbotImage from '../images/chatbot.jpeg';\nimport clusterImage from '../images/bigdata.jpg';\nimport pbftImage from '../images/pbft.png';\nimport adachainImage from '../images/adachain.png';\nimport dsdbImage from '../images/dsdb.png';\nimport taImage from '../images/TA.png';\nimport fleetImage from '../images/fleet.png';\n\n\n\n\n\n// ðŸ”¹ Projects grouped by category\nconst categories = {\n  \"Blockchain & Distributed Databases\": [\n    {\n      title: 'ConsensusX | Self-Optimizing Blockchain Platform',\n      description:\n        'Implemented an adaptive blockchain system integrating BFT consensus protocols (PBFT, SBFT, HotStuff) with architectures (OX, OXII, XOV, XOV++) to handle varying workloads and Byzantine fault scenarios. Developed a reinforcement learning agent for dynamic configuration tuning, achieving ~27% higher throughput than fixed setups.',\n      image: adachainImage,\n      link: '',\n      tags: ['Blockchain', 'Distributed System', 'C++', 'Reinforcement Learning', 'BFT'],\n    },\n    {\n      title: 'Linear PBFT | Low-Complexity Consensus for Blockchains',\n      description:\n        'Developed a permissioned blockchain protocol using Linear PBFT, drastically reducing message complexity compared to classical PBFT. Added view-change and checkpointing mechanisms to tolerate Byzantine replicas while ensuring safety and liveness under network faults.',\n      image: pbftImage,\n      link: 'https://github.com/srinivaslikhith/linear-pbft',\n      tags: ['Blockchain', 'Distributed Consensus', 'C++', 'gRPC', 'Linear PBFT'],\n    },\n    {\n      title: 'APaxos: Distributed Sharded Database',\n      description:\n        'Built a distributed sharded database using a modified Paxos algorithm with snapshots for fast state catch-up. When a node encounters insufficient balance, it attempts to become leader and initiates a consensus round, ensuring all nodes stay up-to-date while supporting intra- and cross-shard transactions with 2PL and 2PC for consistency and fault tolerance.',\n      image: dsdbImage,\n      link: 'https://github.com/srinivaslikhith/2pc-paxos',\n      tags: ['Distributed Database', 'Consensus', 'C++', 'gRPC', 'Paxos', 'Sharding', '2PC', '2PL', 'Snapshots'],\n    },\n  ],\n\n  \"AI & Machine Learning\": [\n    {\n      title: 'Deep Learning Chatbot',\n      description:\n        'Research article on chatbot functionality, highlighting neural network training with intent data. Developed a Python prototype to demonstrate these concepts.',\n      image: chatbotImage,\n      link: 'https://www.warse.org/IJATCSE/static/pdf/file/ijatcse741032021.pdf',\n      tags: ['Python', 'Neural Networks', 'NLP'],\n    },\n    {\n      title: 'Optimized IVF Clustering',\n      description:\n        'Implemented and benchmarked clustering algorithms to optimize Inverted File Indexing for high-dimensional vector embeddings, focusing on efficiency, information loss, and balance.',\n      image: clusterImage,\n      link: '',\n      tags: ['Clustering', 'Vector Embeddings', 'Optimization'],\n    },\n    {\n      title: 'AI Teaching Assistant | Fine-Tuned LLaMA Model',\n      description:\n        'Applied LoRA-based fine-tuning on Metaâ€™s LLaMA-3.2B with 4-bit quantization and mixed-precision training over domain-specific transcripts to build an efficient academic chatbot. Deployed via FastAPI and Streamlit with dynamic batching and KV caching to deliver fast student-facing Q&A with <2s latency.',\n      image: taImage,\n      link: '',\n      tags: ['AI', 'Chatbot', 'LLaMA', 'PyTorch', 'Transformers', 'FastAPI'],\n    },\n  ],\n\n  \"Software Engineering & Microservices\": [\n    {\n      title: 'FleetUpdater | IoT Device Management',\n      description:\n        'Built a backend microservice with REST APIs and a ReactJS frontend to enable secure OTA updates for IoT devices using AWS S3 presigned URLs, checksum validation, and recovery mechanisms resilient to reboots and unreliable networks. Developed a React dashboard to manage device groups and track installations across thousands of devices.',\n      image: fleetImage,\n      link: '',\n      tags: ['IoT', 'Device Management', 'ReactJS', 'AWS S3', 'Microservices', 'OTA Updates'],\n    },\n    {\n      title: 'Plasma Donor App',\n      description:\n        'Developed a plasma donor web app, cutting deployment time by 70% with Docker and a Jenkins CI/CD pipeline. Utilized AWS Lambda, API Gateway, and DynamoDB for scalable data handling, with Amazon SNS for real-time notifications.',\n      image: plasmaImage,\n      link: 'https://github.com/srinivaslikhith/dynamite',\n      tags: ['Containerization', 'Jenkins', 'AWS', 'CI/CD'],\n    },\n  ],\n};\n\n// ðŸ”¹ Project Card with expandable description\nfunction ProjectCard({ project }) {\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleDescription = () => {\n    setExpanded(!expanded);\n  };\n\n  const shortText =\n    project.description.length > 160\n      ? project.description.slice(0, 160) + '...'\n      : project.description;\n\n  return (\n    <div className=\"project-card\">\n      <div className=\"project-image-container\">\n        {project.image && (\n          <img src={project.image} alt={project.title} className=\"project-image\" />\n        )}\n        <div className=\"project-overlay\">\n          {project.link && (\n            <a\n              href={project.link}\n              className=\"view-project-btn\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              View Project\n            </a>\n          )}\n        </div>\n      </div>\n\n      <div className=\"project-content\">\n        <h3 className=\"project-title\">{project.title}</h3>\n        <p className=\"project-description\">\n          {expanded ? project.description : shortText}\n        </p>\n        {project.description.length > 160 && (\n          <button className=\"see-more-btn\" onClick={toggleDescription}>\n            {expanded ? 'See Less' : 'See More'}\n          </button>\n        )}\n        <div className=\"project-tags\">\n          {Array.isArray(project.tags) &&\n            project.tags.map((tag, idx) => (\n              <span key={idx} className=\"project-tag\">\n                {tag}\n              </span>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Projects({ skillsRef }) {\n\n  return (\n    <section id=\"projects\">\n      <div className=\"projects-container\">\n        {categories &&\n          Object.entries(categories).map(([category, projects]) => (\n            <div key={category} className=\"project-category\">\n              <h3 className=\"category-title\">{category}</h3>\n              <div className=\"projects-grid\">\n                {Array.isArray(projects) &&\n                  projects.map((project, index) => (\n                    <ProjectCard key={index} project={project} />\n                  ))}\n              </div>\n            </div>\n          ))}\n           </div>\n    </section>\n  );\n}\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}